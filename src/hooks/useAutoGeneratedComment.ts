import { useState, useEffect } from 'react';

interface GenerationState {
  isGenerating: boolean;
  isSuccess: boolean;
  error: string | null;
  commentData?: {
    username: string;
    comment: string;
    imagePath: string;
  };
}

export const useAutoGeneratedComment = () => {
  const [state, setState] = useState<GenerationState>({
    isGenerating: false,
    isSuccess: false,
    error: null,
  });

  const generateComment = async () => {
    setState(prev => ({ ...prev, isGenerating: true, error: null }));

    try {
      console.log('🎬 Génération automatique du commentaire TikTok...');
      
      const response = await fetch('/api/generate-tiktok-comment', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ maxRetries: 3 }),
      });

      const result = await response.json();

      if (result.success) {
        console.log('✅ Commentaire généré automatiquement:', result.data);
        setState({
          isGenerating: false,
          isSuccess: true,
          error: null,
          commentData: result.data,
        });
      } else {
        throw new Error(result.error || 'Erreur de génération');
      }
    } catch (error) {
      console.error('❌ Erreur lors de la génération automatique:', error);
      setState({
        isGenerating: false,
        isSuccess: false,
        error: error instanceof Error ? error.message : 'Erreur inconnue',
      });
    }
  };

  // Générer automatiquement au montage du composant
  useEffect(() => {
    generateComment();
  }, []);

  return {
    ...state,
    regenerate: generateComment,
  };
};