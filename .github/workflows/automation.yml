name: Automatisation TikTok

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  automate:
    runs-on: ubuntu-latest
    env:
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      CLOUDINARY_AUDIO_FOLDER: music
      METRICOOL_EMAIL: ${{ secrets.METRICOOL_EMAIL }}
      METRICOOL_PASSWORD: ${{ secrets.METRICOOL_PASSWORD }}
      TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      RESEND_TO: ${{ secrets.RESEND_TO }}

    steps:
      - name: üì¶ Checkout code
        uses: actions/checkout@v4

      - name: üîß Installer Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: üì• Installer pnpm
        run: npm install -g pnpm

      - name: üì¶ Installer les d√©pendances
        run: pnpm install --frozen-lockfile

      # üî• AJOUT CRUCIAL : Installation des navigateurs Playwright
      - name: üåê Installer les navigateurs Playwright
        run: pnpm exec playwright install --with-deps

      - name: üéµ Pr√©-audio
        run: pnpm run preaudio

      - name: üé≠ Pr√©-√©motion
        run: pnpm run preemotion

      - name: üé• Render
        run: pnpm run render

      - name: ‚ú® Postrender - upload sur Cloudinary
        run: pnpm run upload-video-cloudinary

      - name: ‚ú® Postrender - automation vid√©o
        run: pnpm run video-upload-automation

      # Notification Telegram - Sera ex√©cut√©e m√™me en cas d'√©chec
      - name: üì¢ Notifier Telegram (succ√®s ou √©chec)
        if: always() # Toujours ex√©cuter m√™me si les √©tapes pr√©c√©dentes √©chouent
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ job.status == 'success' && '‚úÖ' || '‚ùå' }} Automatisation TikTok termin√©e !
            Statut: ${{ job.status }}
            Workflow: ${{ github.workflow }}
            Job: ${{ github.job }}
            Commit: ${{ github.sha }}
            Auteur: ${{ github.actor }}
            Lien: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      # Email - Sera ex√©cut√© m√™me en cas d'√©chec
      - name: üìß Envoyer mail stylis√© React Email + Tailwind via Resend
        if: always() # Toujours ex√©cuter m√™me si les √©tapes pr√©c√©dentes √©chouent
        run: pnpm run send-email
        env:
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          RESEND_TO: ${{ secrets.RESEND_TO }}
          STATUS: ${{ job.status }}
          STATUS_EMOJI: ${{ job.status == 'success' && 'üéâ' || 'üí•' }}
          GITHUB_WORKFLOW: ${{ github.workflow }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_SERVER_URL: ${{ github.server_url }}
          GITHUB_RUN_ID: ${{ github.run_id }}
